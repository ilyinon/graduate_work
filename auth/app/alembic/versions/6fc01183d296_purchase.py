"""Initial migration

Revision ID: 6fc01183d296
Revises: 15a5d4acd787
Create Date: 2025-01-04 17:22:59.787447

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from datetime import datetime
from uuid import uuid4

# revision identifiers, used by Alembic.
revision: str = '6fc01183d296'
down_revision: Union[str, None] = '15a5d4acd787'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    tariffs_table = op.create_table('tariffs',
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('purchases',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('tariff_id', sa.UUID(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('is_successful', sa.Boolean(), nullable=True),
    sa.Column('failure_reason', sa.String(), nullable=True),
    sa.Column('promocode_code', sa.String(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['tariff_id'], ['tariffs.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_tariff',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('tariff_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['tariff_id'], ['tariffs.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    now = datetime.utcnow()
    base_tariffs = [
        {
            'id': str(uuid4()),
            'name': 'Стандарт',
            'description': 'Доступ к базовому контенту кинотеатра.',
            'price': 399,
            'created_at': now,
            'modified_at': now,
        },
        {
            'id': str(uuid4()),
            'name': 'Премиум',
            'description': 'Доступ к премиум контенту и новым фильмам.',
            'price': 699,
            'created_at': now,
            'modified_at': now,
        },
        {
            'id': str(uuid4()),
            'name': 'VIP',
            'description': 'Все преимущества премиум тарифа плюс эксклюзивные предложения.',
            'price': 1999,
            'created_at': now,
            'modified_at': now,
        },
    ]
    op.bulk_insert(tariffs_table, base_tariffs)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_tariff')
    op.drop_table('purchases')
    op.drop_table('tariffs')
    op.execute(
        """
        DELETE FROM tariffs
        WHERE name IN ('Стандартный', 'Премиум', 'VIP')
        """
    )
    # ### end Alembic commands ###
